@startuml

skinparam class {
	BackgroundColor White
	ArrowColor Black
	BorderColor Black
}

abstract class Message <typename TReadIter, typename TWriteIter>{
  __ private __
  == public ==
  + ErrorStatus write(WriteIterator &) 
  + ErrorStatus read(ReadIterator &) 
  -- protected --
  - virtual ErrorStatus writeImpl(WriteIterator&) = 0;
  - virtual ErrorStatus readImpl(ReadIterator&) = 0;
}

class Message1 <typename TReadIter, typename TWriteIter>{

  == public ==
  + virtual ErrorStatus writeImpl(WriteIterator& )  override {....}
  + virtual ErrorStatus readImpl(ReadIterator& ) override {...}; 
}

class Message2 <typename TReadIter, typename TWriteIter>{

  == public ==
  + virtual ErrorStatus writeImpl(WriteIterator&) override {....}
  + virtual ErrorStatus readImpl(ReadIterator&) override {...}; 
}


class CommInterface<typename TRxBuffer, typename TTxBuffer>{

  == public ==
  + ErrorStatus transmit(WriteIterator &);
  + ErrorStatus receive(ReadIterator &);
  -- protected --
  - virtual ErrorStatus receiveImpl(WriteIterator&) = 0;
  - virtual ErrorStatus transmitImp(ReadIterator&) = 0;
}


class CommI2C<typename TRxBuffer, typename TTxBuffer>{

  -- protected --
  - virtual ErrorStatus receiveImpl(WriteIterator&) = 0;
  - virtual ErrorStatus transmitImp(ReadIterator&) = 0;
}


Message -[Hidden]> CommInterface
Message <|-- Message1
Message <|-- Message2

CommInterface <|-- CommI2C

@enduml